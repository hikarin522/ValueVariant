<#@ template language="C#" hostspecific="false" linePragmas="false" #>
<#@ output extension=".tt.cs" encoding="utf-8" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../Const.t4" #>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY ValueVariantN.tt. DO NOT CHANGE IT.
// </auto-generated>
#nullable enable

using System.Runtime.CompilerServices;

using ValueVariant.Details;

namespace ValueVariant;
<# for (var i = 1; i <= MaxTypeParam; ++i) { #>

public static class ValueVariant<#= i #>
{
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static bool TryGetValue<T, U>(this T @this, out U @out)
		where T: unmanaged, IValueVariantIndex<#= i #><U> where U: unmanaged
	{
		var flg = @this.TypeIndex == <#= i #>;
		@out = flg ? @this.Item<#= i #> : default;
		return flg;
	}
}
<# } #>
